(()=>{"use strict";const t="v1.0.0-testing2";self.addEventListener("install",(e=>{console.log("".concat(t," installing\u2026"));const a=[{'revision':'e2b1d8cfaa6812dafbbba6efe9be40ae','url':'/ExpenseTrackingAppReactJS/index.html'},{'revision':null,'url':'/ExpenseTrackingAppReactJS/static/css/main.89963fdd.css'},{'revision':null,'url':'/ExpenseTrackingAppReactJS/static/js/main.63a3e260.js'}];self.skipWaiting(),e.waitUntil((async e=>{const a=await caches.open(t);await a.addAll(e.map((t=>t.url)))})(a))})),self.addEventListener("activate",(e=>{e.waitUntil((async()=>{const e=await caches.keys();await Promise.all(e.filter((e=>e!==t)).map((t=>caches.delete(t))))})()),console.log("".concat(t," activated..."))})),self.addEventListener("fetch",(e=>{e.respondWith((async e=>{const a=await caches.match(e);if(a)return a;const s=await fetch(e);return(async(e,a)=>{const s=await caches.open(t);"POST"!==e.method?await s.put(e,a):console.log("Cannot cache POST requests")})(e,s.clone()),s})(e.request))})),self.addEventListener("message",(t=>{t.data&&"SKIP_WAITING"===t.data.type&&self.skipWaiting()}))})();
//# sourceMappingURL=service-worker.js.map