(()=>{"use strict";const e="v1.0.0-testing5";self.addEventListener("install",(t=>{console.log("".concat(e," installing\u2026"));const n=[{'revision':'a3cc1e1590d359e696dfde523348dc76','url':'/ExpenseTrackingAppReactJS/index.html'},{'revision':null,'url':'/ExpenseTrackingAppReactJS/static/css/main.d8e655ee.css'},{'revision':null,'url':'/ExpenseTrackingAppReactJS/static/js/main.7872f54b.js'}];self.skipWaiting(),t.waitUntil((async t=>{const n=await caches.open(e);await n.addAll(t.map((e=>e.url)))})(n))})),self.addEventListener("activate",(t=>{t.waitUntil((async()=>{const t=await caches.keys();await Promise.all(t.filter((t=>t!==e)).map((e=>caches.delete(e))))})()),console.log("".concat(e," activated..."))})),self.addEventListener("fetch",(t=>{t.respondWith((async t=>{const n=await caches.match(t);if(n)return n;const o=await fetch(t);return(async(t,n)=>{const o=await caches.open(e);"POST"!==t.method?await o.put(t,n):console.log("Cannot cache POST requests")})(t,o.clone()),o})(t.request))}));const t="exp-store";self.addEventListener("message",(e=>{})),self.addEventListener("sync",(function(e){"expense-sync"===e.tag&&async function(e){let n;const o=self.indexedDB.open("expenses-db",1);o.onerror=function(e){var t;console.log("ExpenseApp isn't allowed to use IndexedDB?!"+(null===(t=e.target)||void 0===t?void 0:t.errorCode))},o.onupgradeneeded=function(e){n=o.result,n.objectStoreNames.contains(t)||n.createObjectStore(t,{keyPath:"id"})},o.onsuccess=function(t){var o;n=null===(o=t.target)||void 0===o?void 0:o.result,e&&e(n)}}((e=>function(e,n,o){const s=e.transaction(t,"readwrite"),a=s.objectStore(t).get(n);a.onsuccess=function(e){var t;o&&o(null===(t=e.target)||void 0===t?void 0:t.result.value)},a.onerror=function(){console.log("Error did not read to store",a.error)},s.onerror=function(e){console.log("trans failed",e)},s.oncomplete=function(e){console.log("trans completed",e)}}(e,"id",(e=>{}))))}))})();
//# sourceMappingURL=service-worker.js.map